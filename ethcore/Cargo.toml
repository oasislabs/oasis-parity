[package]
description = "Ethcore library"
homepage = "http://parity.io"
license = "GPL-3.0"
name = "ethcore"
version = "1.12.0"
authors = ["Parity Technologies <admin@parity.io>"]

[dependencies]
# ansi_term = "0.10"
bloomchain = { path = "../util/bloomchain" }
bn = { git = "https://github.com/paritytech/bn", default-features = false }
byteorder = "1.0"
common-types = { path = "types" }
# crossbeam = "0.3"
# ethash = { path = "../ethash" }
ethcore-bloom-journal = { path = "../util/bloom" }
ethcore-bytes = { path = "../util/bytes" }
# fetch = { path = "../util/fetch" }
hashdb = { path = "../util/hashdb" }
memorydb = { path = "../util/memorydb" }
patricia-trie = { path = "../util/patricia_trie" }
ethcore-crypto = { path = "crypto" }
error-chain = { version = "0.10", default-features = false }
# ethcore-io = { path = "../util/io" }
# ethcore-logger = { path = "../logger" }
# ethcore-miner = { path = "../miner" }
# ethcore-stratum = { path = "./stratum" }
ethcore-transaction = { path = "./transaction" }
ethereum-types = { version = "0.3", default-features = false, features = ["std", "serialize"] }
memory-cache = { path = "../util/memory_cache" }
ethabi = "5.1"
ethabi-derive = "5.1"
ethabi-contract = "5.1"
ethjson = { path = "../json" }
ethkey = { path = "../ethkey" }
# ethstore = { path = "../ethstore" }
evm = { path = "evm" }
# hardware-wallet = { path = "../hw" }
heapsize = "0.4"
itertools = "0.5"
lazy_static = "1.0"
log = "0.3"
lru-cache = "0.1"
num-bigint = { version = "0.1", default-features = false }
num-integer = { version = "0.1", default-features = false }
num-traits = { version = "0.1", default-features = false }
# num_cpus = "1.2"
parity-machine = { path = "../machine" }
# parking_lot = "0.5"
# rayon = "1.0"
rand = "0.6.5"
rlp = { path = "../util/rlp" }
rlp_compress = { path = "../util/rlp_compress" }
rlp_derive = { path = "../util/rlp_derive" }
kvdb = { path = "../util/kvdb" }
kvdb-memorydb = { path = "../util/kvdb-memorydb" }
util-error = { path = "../util/error" }
# snappy = { git = "https://github.com/paritytech/rust-snappy" }
# stop-guard = { path = "../util/stop-guard" }
macros = { path = "../util/macros" }
rustc-hex = "1.0"
# stats = { path = "../util/stats" }
# trace-time = { path = "../util/trace-time" }
# using_queue = { path = "../util/using_queue" }
vm = { path = "vm" }
wasm = { path = "wasm" }
wasmer = { path = "wasmer", optional = true }
keccak-hash = { path = "../util/hash" }
triehash = { path = "../util/triehash" }
unexpected = { path = "../util/unexpected" }
journaldb = { path = "../util/journaldb" }
siphasher = "0.1.1"
failure = "0.1.5"
serde_json = "1.0"

[dev-dependencies]
tempdir = "0.3"
trie-standardmap = { path = "../util/trie-standardmap" }
# kvdb-rocksdb = { path = "../util/kvdb-rocksdb" }
rand = "0.6.5"

[features]
default = ["enable-confidential"]
# Display EVM debug traces.
evm-debug = ["slow-blocks"]
# Display EVM debug traces when running tests.
evm-debug-tests = ["evm-debug", "evm/evm-debug-tests"]
# Measure time of transaction execution.
# Whenever the transaction execution time (in millis) exceeds the value of
# SLOW_TX_DURATION env variable (provided compile time!)
# EVM debug traces are printed.
slow-blocks = []
# Run JSON consensus tests.
json-tests = ["ethcore-transaction/json-tests"]
# Run memory/cpu heavy tests.
test-heavy = []
# Compile benches
benches = []
# Compile test helpers
test-helpers = []
# Execute confidential transactions
enable-confidential = []
# Don't allow non-confidential transctions. Used for an exlusively confidential chain.
disable-non-confidential = []
# Enable ethkey features needed for tests (i.e., rand)
ethkey-test = ["ethkey/test"]
# Distinguish using wasmi or wasmer as the runtime backend
use-wasmer-runtime = ["wasmer"]
